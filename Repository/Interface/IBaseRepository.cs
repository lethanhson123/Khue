namespace Repository.Interface
{
    public interface IBaseRepository<T> where T : BaseModel
    {
        DbSet<T> DbSet();
        int Add(T model);
        Task<int> AddAsync(T model);
        int Update(T model);
        Task<int> UpdateAsync(T model);
        int Remove(long ID);
        Task<int> RemoveAsync(long ID);
        int AddRange(List<T> list);
        Task<int> AddRangeAsync(List<T> list);
        int UpdateRange(List<T> list);
        Task<int> UpdateRangeAsync(List<T> list);
        int RemoveRange(List<T> list);
        Task<int> RemoveRangeAsync(List<T> list);
        IQueryable<T> GetByCondition(Expression<Func<T, bool>> whereCondition);
        T GetByID(long ID);
        Task<T> GetByIDAsync(long ID);
        T GetByName(string name);
        Task<T> GetByNameAsync(string name);
        T GetByCode(string code);
        Task<T> GetByCodeAsync(string code);      
        List<T> GetAllToList();
        Task<List<T>> GetAllToListAsync();
        List<T> GetByIDToList(long ID);
        Task<List<T>> GetByIDToListAsync(long ID);
        List<T> GetByListIDToList(List<long> ListID);
        Task<List<T>> GetByListIDToListAsync(List<long> ListID);
        List<T> GetByCodeToList(string Code);
        Task<List<T>> GetByCodeToListAsync(string Code);
        List<T> GetByActiveToList(bool active);
        Task<List<T>> GetByActiveToListAsync(bool active);
        List<T> GetByParentIDToList(long parentID);
        Task<List<T>> GetByParentIDToListAsync(long parentID);
        List<T> GetByDanhMucUngDungIDToList(long DanhMucUngDungID);
        Task<List<T>> GetByDanhMucUngDungIDToListAsync(long DanhMucUngDungID);
        List<T> GetByActiveAndSearchStringToList(bool Active, string searchString);
        Task<List<T>> GetByActiveAndSearchStringToListAsync(bool Active, string searchString);
        List<T> GetByParentIDAndSearchStringToList(long parentID, string searchString);
        Task<List<T>> GetByParentIDAndSearchStringToListAsync(long parentID, string searchString);        
        List<T> GetByDanhMucUngDungIDAndSearchStringToList(long DanhMucUngDungID, string searchString);
        Task<List<T>> GetByDanhMucUngDungIDAndSearchStringToListAsync(long DanhMucUngDungID, string searchString);
        List<T> GetByDanhMucUngDungIDAndActiveAndSearchStringToList(long DanhMucUngDungID, bool Active, string searchString);
        Task<List<T>> GetByDanhMucUngDungIDAndActiveAndSearchStringToListAsync(long DanhMucUngDungID, bool Active, string searchString);
        List<T> GetByParentIDAndActiveToList(long parentID, bool active);
        Task<List<T>> GetByParentIDAndActiveToListAsync(long parentID, bool active);
        List<T> GetByDanhMucUngDungIDAndActiveToList(long DanhMucUngDungID, bool active);
        Task<List<T>> GetByDanhMucUngDungIDAndActiveToListAsync(long DanhMucUngDungID, bool active);
        List<T> GetByParentIDAndCodeToList(long parentID, string code);
        Task<List<T>> GetByParentIDAndCodeToListAsync(long parentID, string code);
        List<T> GetByDanhMucUngDungIDAndCodeToList(long DanhMucUngDungID, string code);
        Task<List<T>> GetByDanhMucUngDungIDAndCodeToListAsync(long DanhMucUngDungID, string code);
        List<T> GetByParentIDAndCodeAndActiveToList(long parentID, string code, bool active);
        Task<List<T>> GetByParentIDAndCodeAndActiveToListAsync(long parentID, string code, bool active);
        List<T> GetByDanhMucUngDungIDAndCodeAndActiveToList(long DanhMucUngDungID, string code, bool active);
        Task<List<T>> GetByDanhMucUngDungIDAndCodeAndActiveToListAsync(long DanhMucUngDungID, string code, bool active);
        List<T> GetByLastUpdatedMembershipIDToList(long lastUpdatedMembershipID);
        Task<List<T>> GetByLastUpdatedMembershipIDToListAsync(long lastUpdatedMembershipID);
        List<T> GetByLastUpdatedMembershipIDAndActiveToList(long lastUpdatedMembershipID, bool active);
        Task<List<T>> GetByLastUpdatedMembershipIDAndActiveToListAsync(long lastUpdatedMembershipID, bool active);
        List<T> GetByParentIDAndLastUpdatedMembershipIDToList(long parentID, long lastUpdatedMembershipID);
        Task<List<T>> GetByParentIDAndLastUpdatedMembershipIDToListAsync(long parentID, long lastUpdatedMembershipID);
        List<T> GetByParentIDAndDanhMucUngDungIDToList(long parentID, long DanhMucUngDungID);
        Task<List<T>> GetByParentIDAndDanhMucUngDungIDToListAsync(long parentID, long DanhMucUngDungID);
        List<T> GetByParentIDAndLastUpdatedMembershipIDAndActiveToList(long parentID, long lastUpdatedMembershipID, bool active);
        Task<List<T>> GetByParentIDAndLastUpdatedMembershipIDAndActiveToListAsync(long parentID, long lastUpdatedMembershipID, bool active);
        List<T> GetByParentIDAndDanhMucUngDungIDAndActiveToList(long parentID, long DanhMucUngDungID, bool active);
        Task<List<T>> GetByParentIDAndDanhMucUngDungIDAndActiveToListAsync(long parentID, long DanhMucUngDungID, bool active);
        List<T> GetBySearchStringToList(string searchString);
        Task<List<T>> GetBySearchStringToListAsync(string searchString);
        List<T> GetByPageAndPageSizeToList(int page, int pageSize);
        Task<List<T>> GetByPageAndPageSizeToListAsync(int page, int pageSize);
        List<T> GetByActiveAndPageAndPageSizeToList(bool Active, int page, int pageSize);
        Task<List<T>> GetByActiveAndPageAndPageSizeToListAsync(bool Active, int page, int pageSize);        
        List<T> GetByParentIDAndPageAndPageSizeToList(long ParentID, int page, int pageSize);
        Task<List<T>> GetByParentIDAndPageAndPageSizeToListAsync(long ParentID, int page, int pageSize);
        List<T> GetByParentIDAndDanhMucUngDungIDAndPageAndPageSizeToList(long ParentID, long DanhMucUngDungID, int page, int pageSize);
        Task<List<T>> GetByParentIDAndDanhMucUngDungIDAndPageAndPageSizeToListAsync(long ParentID, long DanhMucUngDungID, int page, int pageSize);
        List<T> GetByDanhMucUngDungIDAndPageAndPageSizeToList(long DanhMucUngDungID, int page, int pageSize);
        Task<List<T>> GetByDanhMucUngDungIDAndPageAndPageSizeToListAsync(long DanhMucUngDungID, int page, int pageSize);
        List<T> GetByDanhMucUngDungIDAndActiveAndPageAndPageSizeToList(long DanhMucUngDungID, bool Active, int page, int pageSize);
        Task<List<T>> GetByDanhMucUngDungIDAndActiveAndPageAndPageSizeToListAsync(long DanhMucUngDungID, bool Active, int page, int pageSize);
        string ExecuteNonQueryByStoredProcedure(string storedProcedureName, params SqlParameter[] parameters);
        Task<string> ExecuteNonQueryByStoredProcedureAsync(string storedProcedureName, params SqlParameter[] parameters);
        List<T> GetByStoredProcedureToList(string storedProcedureName, params SqlParameter[] parameters);
        Task<List<T>> GetByStoredProcedureToListAsync(string storedProcedureName, params SqlParameter[] parameters);
    }
}
